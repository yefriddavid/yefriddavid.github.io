import { put, call, take, fork } from 'redux-saga/effects'
import { root } from 'postcss';
import * as accountActions from '../actions/accountActions'
import * as apiService from '../services/providers/api/accounts'

export function* fetchAccounts(filters) {
  while(true){
    try{

      const { payload: filters } = yield take(accountActions.fetchData)
      // yield call(apiServices.fetchAccounts, filters)
      yield put(accountActions.beginRequest())
      const responseApiLogin = yield call(apiService1.fetchAccounts, filters)
      yield put(accountActions.successRequest(responseApiLogin))
      //yield fork(logoutFlow)

      //yield fork(watchStartBackgroundApiTasks, request)
    } catch (e) {

      yield put(accountActions.errorRequest({ buuu: 123 }))

    }
  }
}

export default function* rootSagas() {

    yield fork(fetchAccounts)
    console.log("Este es el sagas")
}
